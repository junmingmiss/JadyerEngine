<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-4.2.xsd
						http://www.springframework.org/schema/data/jpa
						http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd">
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
		<property name="ignoreResourceNotFound" value="false"/>
		<property name="locations">
			<list>
				<value>classpath:config-${appenv.active}.properties</value>
			</list>
		</property>
	</bean>
	
	
	<!-- 关于removeAbandonedTimeout的设置：http://my.oschina.net/haogrgr/blog/224010 -->
	<!-- removeAbandoned适用于某业务或者说某连接需要很长时间来让它去处理数据的情景 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="1"/>
		<property name="minIdle" value="1"/>
		<property name="maxActive" value="20"/>
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000"/>
		<!-- 配置间隔多久才进行一次检测,检测需要关闭的空闲连接,单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000"/>
		<!-- 配置一个连接在池中最小生存的时间,单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000"/>
		<property name="validationQuery" value="SELECT 'x'"/>
		<property name="testWhileIdle" value="true"/>
		<property name="testOnBorrow" value="false"/>
		<property name="testOnReturn" value="false"/>
		<!-- 打开PSCache,并且指定每个连接上PSCache的大小 -->
		<!-- PSCache(preparedStatement)对支持游标的数据库性能提升巨大,比如说Oracle/DB2/SQL Server,在mysql下建议关闭 -->
		<property name="poolPreparedStatements" value="false"/>
		<property name="maxPoolPreparedStatementPerConnectionSize" value="-1"/>
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="wall,mergeStat"/>
	</bean>


	<!-- persistence.xml -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="persistenceUnitName" value="spring-data-jpa"/>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true"/>
				<property name="database" value="MYSQL"/>
				<property name="generateDdl" value="false"/>
				<property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect"/>
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.format_sql">true</prop>
				<!-- 
				<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				<prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory</prop>
				 -->
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.jadyer.engine</value>
			</list>
		</property>
	</bean>
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<jpa:repositories base-package="com.jadyer.engine" transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory" repository-impl-postfix="Impl"/>
	
	
	<!-- 注册 -->
	<context:component-scan base-package="com.jadyer"/>
	<aop:aspectj-autoproxy/>
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes" value="application/json;charset=UTF-8"/>
				<property name="features">
					<array>
						<value>PrettyFormat</value>
						<value>WriteMapNullValue</value>
						<value>WriteNullListAsEmpty</value>
						<value>WriteNullNumberAsZero</value>
						<value>WriteNullStringAsEmpty</value>
						<value>WriteNullBooleanAsFalse</value>
						<value>WriteDateUseDateFormat</value>
					</array>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- fastjson-1.2.7与SpringMVC整合 -->
	<!-- 
	1)若按照jackson和SpringMVC的整合方式,应按照下面的写法,但测试发现这样会报告"HTTP Status 406"
	  The resource identified by this request is only capable of generating responses
	  with characteristics not acceptable according to the request "accept" headers.
	2)测试通过的整合方式为上面那样在mvc:annotation-driven里面进行注册
	3)supportedMediaTypes增加[text/html;charset=UTF-8]值,是为了兼容IE6
	     否则[application/json]值在IE6中会导致弹出对话框询问是否保存文件,而firefox等高级浏览器会正常打印json字符串
	4)若像下面这样给supportedMediaTypes属性赋两个值[text/html;charset=UTF-8]和[application/json],则[application/json]是无效的
	     因为此时应答给浏览器(或者说请求方)的Content-Type头信息都是[text/html;charset=UTF-8],所以给它一个值就行了
	     如果给supportedMediaTypes的值为[application/json],则应答给浏览器的Content-Type头信息就是[application/json;charset=UTF-8]
	5)关于features属性,不是serializerFeature,而是features,详见FastJsonHttpMessageConverter.java
	     它是用来控制json序列化输出时的一些额外属性,比如说该字段是否输出、输出时key使用单引号还是双引号、key不使用任何引号等等
	  SortField================输出时是否排序字段,默认为true
	  PrettyFormat=============输出时是否格式化字段,默认为false
	  BrowserSecure============输出时是否Unicode转码字段值,默认为false,比如它会将"天-河"转为"\u5929\u002D\u6CB3"
	  QuoteFieldNames==========输出key时是否使用双引号,默认为true
	  WriteMapNullValue========是否输出值为null的字段,默认为false
	  WriteNullNumberAsZero====数值字段如果为null,输出为0,而非null
	  WriteNullListAsEmpty=====List字段如果为null,输出为[],而非null
	  WriteNullStringAsEmpty===字符类型字段如果为null,输出为"",而非null
	  WriteNullBooleanAsFalse==Boolean字段如果为null,输出为false,而非null
	  WriteDateUseDateFormat===Date字段输出为yyyy-MM-dd HH:mm:ss,而非默认的类似毫秒数的一大堆数字
	6)通常在网上搜到的fastjson和springMVC整合的例子中都像下面注释的代码那样给了两个属性WriteMapNullValue和QuoteFieldNames
	     这就表示为json解析器设置QuoteFieldNames和WriteMapNullValue的值为true,即输出时key使用双引号,同时也输出值为null的字段
	7)输出时某字段为String类型,且值为null,此时若需要其输出,且输出值为空字符串,则需同时赋值WriteMapNullValue和WriteNullStringAsEmpty
	     经测试,若只赋值WriteNullStringAsEmpty,则不会输出该字段..加上WriteMapNullValue属性后,便输出了,且输出值不是null,而是预期的空字符串
	8)关于为WriteDateUseDateFormat参数自定义dateFormatPattern的方式
	  1.2.7版本中的FastJsonHttpMessageConverter并未提供设置dateFormatPattern的入口
	     通过FastJsonHttpMessageConverter.writeInternal()方法我们发现它实际调用的是JSON.toJSONString(obj, features)
	     而不是调用JSON.toJSONString(obj, dateFormat, features),所以若希望自定义dateFormatPattern就只能暂时自己写一个MessageConverter
	 -->
	<!-- 
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
							<value>application/json</value>
						</list>
					</property>
					<property name="serializerFeature">
						<array>
							<value>QuoteFieldNames</value>
							<value>WriteMapNullValue</value>
						</array>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	 -->
	<!-- 
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
					<property name="supportedMediaTypes" value="text/html;charset=UTF-8"/>
				</bean>
			</list>
		</property>
	</bean>
	 -->

	<!-- 静态文件客户端缓存60*60*24*10 -->
	<mvc:resources mapping="/js/**" location="/js/" cache-period="864000"/>
	<mvc:resources mapping="/css/**" location="/css/"/>
	<mvc:resources mapping="/image/**" location="/image/"/>
	<mvc:resources mapping="/404.jsp" location="/404.jsp"/>
	<mvc:resources mapping="/500.jsp" location="/500.jsp"/>
	<mvc:resources mapping="/header.jsp" location="/header.jsp"/>
	<mvc:resources mapping="/footer.jsp" location="/footer.jsp"/>
	<mvc:resources mapping="/robots.txt" location="/robots.txt"/>
	<mvc:resources mapping="/favicon.ico" location="/favicon.ico"/>
	<mvc:resources mapping="/druid" location="/druid/index.html"/>
	<mvc:view-controller path="/" view-name="forward:/login.jsp"/>
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	
	<!-- 指定上传的所有文件的总大小不能超过20MB,超过则自动跳转到/WEB-INF/jsp/error_fileupload.jsp页面 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8"/>
		<property name="maxUploadSize" value="20000000"/>
	</bean>
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">error_fileupload</prop>
			</props>
		</property>
	</bean>
	
	
	<!-- 定时任务 -->
	<!-- 
	<bean id="quartzJobFactory" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="engineTrigger"/>
			</list>
		</property>
		<property name="autoStartup" value="true"/>
	</bean>
	<bean id="engineTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="engineJobDetail"/>
		<property name="cronExpression" value="0 0/2 * * * ?"/>
	</bean>
	<bean id="engineJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="engineQuartz"/>
		<property name="targetMethod" value="execute"/>
		<property name="concurrent" value="false"/>
	</bean>
	 -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean"/>
</beans>